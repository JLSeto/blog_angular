{"ast":null,"code":"import { NavigationEnd } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../helpers/services/helper.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/platform-browser\";\nimport * as i4 from \"@angular/flex-layout/flex\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/flex-layout/extended\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/card\";\nimport * as i9 from \"../frogger/frogger.component\";\nimport * as i10 from \"../projects/iframe-view\";\nimport * as i11 from \"../helpers/pipes/displayDate.pipe\";\n\nfunction BlogComponent_div_3_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function BlogComponent_div_3_div_2_Template_button_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const fb_r7 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return ctx_r8.setFilter(fb_r7);\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const fb_r7 = ctx.$implicit;\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"color\", ctx_r5.selectedFB == fb_r7 ? \"#ffffff\" : \"#ff4081\")(\"background-color\", ctx_r5.selectedFB == fb_r7 ? \"#ff4081\" : \"#ffffff\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", fb_r7, \" \");\n  }\n}\n\nfunction BlogComponent_div_3_div_3_mat_card_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-card\", 14);\n    i0.ɵɵlistener(\"click\", function BlogComponent_div_3_div_3_mat_card_1_Template_mat_card_click_0_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const obj_r10 = i0.ɵɵnextContext().$implicit;\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return ctx_r12.hS.routerNavigateNotes(obj_r10.link);\n    });\n    i0.ɵɵelementStart(1, \"div\", 15);\n    i0.ɵɵelementStart(2, \"div\", 16);\n    i0.ɵɵelement(3, \"img\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 18);\n    i0.ɵɵelementStart(5, \"div\", 19);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 20);\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"displayDate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 20);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 21);\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const obj_r10 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"src\", obj_r10.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(obj_r10.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(9, 5, obj_r10.date));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"(\", obj_r10.subtitle, \")\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(obj_r10.description);\n  }\n}\n\nfunction BlogComponent_div_3_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtemplate(1, BlogComponent_div_3_div_3_mat_card_1_Template, 14, 7, \"mat-card\", 13);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const obj_r10 = ctx.$implicit;\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.checkFilter(obj_r10));\n  }\n}\n\nfunction BlogComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵelementStart(1, \"div\", 9);\n    i0.ɵɵtemplate(2, BlogComponent_div_3_div_2_Template, 3, 5, \"div\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, BlogComponent_div_3_div_3_Template, 2, 1, \"div\", 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.filterButtons);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.arrProjects);\n  }\n}\n\nfunction BlogComponent_div_5_div_1_div_3_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 24);\n  }\n\n  if (rf & 2) {\n    const detail_r20 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"innerHTML\", detail_r20.notes, i0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction BlogComponent_div_5_div_1_div_3_div_4_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r30 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r30, \" \");\n  }\n}\n\nfunction BlogComponent_div_5_div_1_div_3_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵelementStart(1, \"ul\");\n    i0.ɵɵtemplate(2, BlogComponent_div_5_div_1_div_3_div_4_li_2_Template, 2, 1, \"li\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const detail_r20 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", detail_r20.list);\n  }\n}\n\nfunction BlogComponent_div_5_div_1_div_3_div_5_tr_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"th\");\n    i0.ɵɵtext(2, \"Function\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"th\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const detail_r20 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", detail_r20.tableListHead.rightHead, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", detail_r20.tableListHead.right2Head, \" \");\n  }\n}\n\nfunction BlogComponent_div_5_div_1_div_3_div_5_tr_3_td_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r35 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r35.right2, \" \");\n  }\n}\n\nfunction BlogComponent_div_5_div_1_div_3_div_5_tr_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, BlogComponent_div_5_div_1_div_3_div_5_tr_3_td_5_Template, 2, 1, \"td\", 22);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r35 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", item_r35.left, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", item_r35.right, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r35.right2);\n  }\n}\n\nfunction BlogComponent_div_5_div_1_div_3_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵelementStart(1, \"table\");\n    i0.ɵɵtemplate(2, BlogComponent_div_5_div_1_div_3_div_5_tr_2_Template, 7, 2, \"tr\", 22);\n    i0.ɵɵtemplate(3, BlogComponent_div_5_div_1_div_3_div_5_tr_3_Template, 6, 3, \"tr\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const detail_r20 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", detail_r20.tableListHead);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", detail_r20.tableList);\n  }\n}\n\nfunction BlogComponent_div_5_div_1_div_3_div_6_div_2_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 33);\n    i0.ɵɵelementStart(1, \"a\", 34);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r40 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"href\", item_r40.link, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r40.title);\n  }\n}\n\nfunction BlogComponent_div_5_div_1_div_3_div_6_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, BlogComponent_div_5_div_1_div_3_div_6_div_2_button_1_Template, 3, 2, \"button\", 32);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r40 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r40.link);\n  }\n}\n\nfunction BlogComponent_div_5_div_1_div_3_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵelementStart(1, \"div\", 31);\n    i0.ɵɵtemplate(2, BlogComponent_div_5_div_1_div_3_div_6_div_2_Template, 2, 1, \"div\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const detail_r20 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", detail_r20.tagListLinks);\n  }\n}\n\nfunction BlogComponent_div_5_div_1_div_3_div_7_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"button\", 35);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r45 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r45);\n  }\n}\n\nfunction BlogComponent_div_5_div_1_div_3_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵelementStart(1, \"div\", 31);\n    i0.ɵɵtemplate(2, BlogComponent_div_5_div_1_div_3_div_7_div_2_Template, 3, 1, \"div\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const detail_r20 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", detail_r20.tagList);\n  }\n}\n\nfunction BlogComponent_div_5_div_1_div_3_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 36);\n    i0.ɵɵelement(1, \"span\", 4);\n    i0.ɵɵelementStart(2, \"div\", 25);\n    i0.ɵɵelement(3, \"img\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"span\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const detail_r20 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"src\", detail_r20.img, i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction BlogComponent_div_5_div_1_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"h2\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, BlogComponent_div_5_div_1_div_3_div_3_Template, 1, 1, \"div\", 27);\n    i0.ɵɵtemplate(4, BlogComponent_div_5_div_1_div_3_div_4_Template, 3, 1, \"div\", 28);\n    i0.ɵɵtemplate(5, BlogComponent_div_5_div_1_div_3_div_5_Template, 4, 2, \"div\", 28);\n    i0.ɵɵtemplate(6, BlogComponent_div_5_div_1_div_3_div_6_Template, 3, 1, \"div\", 28);\n    i0.ɵɵtemplate(7, BlogComponent_div_5_div_1_div_3_div_7_Template, 3, 1, \"div\", 28);\n    i0.ɵɵtemplate(8, BlogComponent_div_5_div_1_div_3_div_8_Template, 5, 1, \"div\", 29);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const detail_r20 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(detail_r20.heading);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", detail_r20.notes);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", detail_r20.list);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", detail_r20.tableList);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", detail_r20.tagListLinks);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", detail_r20.tagList);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", detail_r20.img);\n  }\n}\n\nfunction BlogComponent_div_5_div_1_app_frogger_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-frogger\", 37);\n  }\n}\n\nfunction BlogComponent_div_5_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"h1\", 23);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, BlogComponent_div_5_div_1_div_3_Template, 9, 7, \"div\", 5);\n    i0.ɵɵelementStart(4, \"div\");\n    i0.ɵɵelementStart(5, \"h2\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"div\", 24);\n    i0.ɵɵelementStart(8, \"div\", 25);\n    i0.ɵɵtemplate(9, BlogComponent_div_5_div_1_app_frogger_9_Template, 1, 0, \"app-frogger\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const obj_r16 = i0.ɵɵnextContext().$implicit;\n    const ctx_r17 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(obj_r16.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", obj_r16.details);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(obj_r16 == null ? null : obj_r16.demo == null ? null : obj_r16.demo.heading);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", obj_r16.demo == null ? null : obj_r16.demo.notes, i0.ɵɵsanitizeHtml);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", obj_r16.link == \"frogger\" && !ctx_r17.hS.getIsMobile());\n  }\n}\n\nfunction BlogComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, BlogComponent_div_5_div_1_Template, 10, 5, \"div\", 22);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const obj_r16 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.checkCurrentURL(obj_r16));\n  }\n}\n\nfunction BlogComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 38);\n    i0.ɵɵelement(1, \"app-iframesrc\", 39);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"iframeSrc\", ctx_r2.iframeSrc);\n  }\n}\n\nfunction BlogComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 40);\n    i0.ɵɵelementStart(1, \"button\", 33);\n    i0.ɵɵelementStart(2, \"a\", 34);\n    i0.ɵɵtext(3, \"View Source Code on GitHub\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"href\", ctx_r3.gitSrc, i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction BlogComponent_div_9_div_1_div_1_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"button\", 35);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const hw_r55 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(hw_r55);\n  }\n}\n\nfunction BlogComponent_div_9_div_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"h2\");\n    i0.ɵɵtext(2, \"Hardware\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 31);\n    i0.ɵɵtemplate(4, BlogComponent_div_9_div_1_div_1_div_4_Template, 3, 1, \"div\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const obj_r49 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", obj_r49.hardware);\n  }\n}\n\nfunction BlogComponent_div_9_div_1_div_2_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"button\", 35);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const sw_r58 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(sw_r58);\n  }\n}\n\nfunction BlogComponent_div_9_div_1_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"h2\");\n    i0.ɵɵtext(2, \"Software\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 31);\n    i0.ɵɵtemplate(4, BlogComponent_div_9_div_1_div_2_div_4_Template, 3, 1, \"div\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const obj_r49 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", obj_r49.software);\n  }\n}\n\nfunction BlogComponent_div_9_div_1_div_3_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"button\", 33);\n    i0.ɵɵelementStart(2, \"a\", 34);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const rf_r61 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"href\", rf_r61.link, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(rf_r61.title);\n  }\n}\n\nfunction BlogComponent_div_9_div_1_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"h2\");\n    i0.ɵɵtext(2, \"References\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 31);\n    i0.ɵɵtemplate(4, BlogComponent_div_9_div_1_div_3_div_4_Template, 4, 2, \"div\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const obj_r49 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", obj_r49.references);\n  }\n}\n\nfunction BlogComponent_div_9_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, BlogComponent_div_9_div_1_div_1_Template, 5, 1, \"div\", 22);\n    i0.ɵɵtemplate(2, BlogComponent_div_9_div_1_div_2_Template, 5, 1, \"div\", 22);\n    i0.ɵɵtemplate(3, BlogComponent_div_9_div_1_div_3_Template, 5, 1, \"div\", 22);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const obj_r49 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", obj_r49.hardware.length > 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", obj_r49.software.length > 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", obj_r49.references.length > 0);\n  }\n}\n\nfunction BlogComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, BlogComponent_div_9_div_1_Template, 4, 3, \"div\", 22);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const obj_r49 = ctx.$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.checkCurrentURL(obj_r49));\n  }\n}\n\nexport let BlogComponent = /*#__PURE__*/(() => {\n  class BlogComponent {\n    constructor(hS, route, router, cfr, dom) {\n      this.hS = hS;\n      this.route = route;\n      this.router = router;\n      this.cfr = cfr;\n      this.dom = dom;\n      this.filterButtons = ['All', 'Data Structures', 'Algorithms'];\n      this.selectedFB = this.filterButtons[0];\n      this.currentURL = '';\n      this._routerSub = Subscription.EMPTY; //Check when the navigation ends, and then get profile info to prevent multiple requests\n\n      this.currentRoute = this.route.snapshot.paramMap.get('title');\n      this.arrProjects = this.defineProjects();\n      this._routerSub = router.events.subscribe(val => {\n        if (val instanceof NavigationEnd) {\n          this.setiFrame(val.url);\n          this.reInitialize(val.url);\n        }\n      });\n    }\n\n    ngOnInit() {}\n\n    reInitialize(url) {\n      url = url.split(\"/\")[2];\n      this.currentURL = url;\n    }\n\n    checkCurrentURL(obj) {\n      return obj.link == this.currentURL ? true : false;\n    }\n\n    setiFrame(url) {\n      var _a, _b;\n\n      url = url.split(\"/\")[2];\n\n      for (let obj of this.arrProjects) {\n        if (obj.link == url) {\n          let isValid = obj.link == url ? true : false;\n\n          if (isValid) {\n            this.gitSrc = (_a = obj.demo) === null || _a === void 0 ? void 0 : _a.git;\n            this.iframeSrc = (_b = obj.demo) === null || _b === void 0 ? void 0 : _b.video;\n          }\n        }\n      }\n    }\n\n    checkFilter(obj) {\n      return this.selectedFB == 'All' || obj.type.includes(this.selectedFB) ? true : false;\n    }\n\n    setFilter(str) {\n      this.selectedFB = str;\n    }\n\n    ngOnDestroy() {\n      if (!!this._routerSub) {\n        this._routerSub.unsubscribe();\n      }\n    }\n\n    defineProjects() {\n      return [{\n        type: [\"Data Structures\"],\n        image: \"\",\n        title: \"Union Find\",\n        date: new Date(\"August 12, 2021\"),\n        subtitle: \"TypeScript, C++\",\n        description: \"Notes on the Union Find Data Structure\",\n        link: \"unionfind\",\n        details: [{\n          heading: 'What?',\n          notes: `A data structure that keeps track of elements which are split into one or more sets \n                                                        (shows which elements are connected).  There are two main operations: Union & Find`\n        }, {\n          heading: 'When / Where',\n          list: [\"KrusKal's Min Spanning Tree\", \"Grid Percolation\", \"Network Connectivity\", \"Least Common Ancestors\", \"Image Processing\"]\n        }, {\n          heading: 'Complexity',\n          tableList: [{\n            left: \"Construction, Union\",\n            right: \"O(n)\"\n          }, {\n            left: \"Union\",\n            right: \"α(n)\"\n          }, {\n            left: \"Find\",\n            right: \"α(n)\"\n          }, {\n            left: \"Get Component Size\",\n            right: \"α(n)\"\n          }, {\n            left: \"Check if Connected\",\n            right: \"α(n)\"\n          }, {\n            left: \"Count Components\",\n            right: \"O(1)\"\n          }]\n        }, {\n          heading: 'Practice',\n          tagList: [`Number of Islands`, 'Percolation']\n        }, {\n          heading: 'Implementation',\n          tagListLinks: [{\n            link: \"https://github.com/JLSeto/DataStructures/tree/main/tS_jS/src/unionfind\",\n            title: \"TypeScript\"\n          }, {\n            link: \"\",\n            title: \"C++\"\n          }]\n        }],\n        hardware: [],\n        software: [],\n        references: []\n      }, {\n        type: [\"Data Structures\"],\n        image: \"\",\n        title: \"Linked Lists\",\n        date: new Date(\"August 12, 2021\"),\n        subtitle: \"TypeScript, C++\",\n        description: \"Notes on the Linked Lists Data Structure\",\n        link: \"linkedlists\",\n        details: [{\n          heading: 'What?',\n          notes: `A sequential list of nodes that holds data which point to other \n                                                        nodes also containing data.`\n        }, {\n          heading: 'When / Where',\n          list: [\"List, Queue & Stack Implementations\", \"Circular Lists\", \"Model real world objects like trains\", \"Hash Table Implementations\", \"Adjacency lists for graphs\"]\n        }, {\n          heading: 'Complexity',\n          tableListHead: {\n            rightHead: \"Single\",\n            right2Head: \"Double\"\n          },\n          tableList: [{\n            left: \"Remove head\",\n            right: \"O(1)\",\n            right2: \"O(1)\"\n          }, {\n            left: \"Remove Tail\",\n            right: \"O(n) ~ need to set new tail next to null\",\n            right2: \"O(1)\"\n          }, {\n            left: \"Remove Middle\",\n            right: \"O(n)\",\n            right2: \"O(n)\"\n          }]\n        }, {\n          heading: 'Singly vs Double Linked List',\n          notes: `Single - less memory, but cannot easily access previous elements. <br>\n                                                        Double - can traverse backwards, but costs 2x memory`\n        }, {\n          heading: 'Implementation',\n          tagListLinks: [{\n            link: \"https://github.com/JLSeto/DataStructures/tree/main/tS_jS/src/linkedlist\",\n            title: \"TypeScript\"\n          }, {\n            link: \"\",\n            title: \"C++\"\n          }]\n        }],\n        hardware: [],\n        software: [],\n        references: []\n      }, {\n        type: [\"Data Structures\"],\n        image: \"\",\n        title: \"Hash Table\",\n        date: new Date(\"August 12, 2021\"),\n        subtitle: \"TypeScript, C++\",\n        description: \"Notes on the Hash Table Data Structure\",\n        link: \"hashtable\",\n        details: [{\n          heading: 'What?',\n          notes: `A data structure that provides a mapping from keys to values\n                                                        using a technique called hashing. (key, value).  How this is done is with\n                                                        a Hash Function - which is a function that \n                                                        maps a key to a Whole Number in a fixed range`\n        }, {\n          heading: 'Properties of Hash Function',\n          notes: `If H(x) = H(y) then objects x & y might be equal. \n                                                         If H(x) != H(y), then definetly not equal! Above is useful\n                                                         to check if 2 objects are = by not checking the whole of the obj if is large.\n                                                         (e.g like comparing files)`\n        }, {\n          heading: 'How Does a Hash Table Work?',\n          notes: `Use a uniform Hash Function. How to handle hash Collisions? \n                                                        Separate Chaining - maintain a DS like Linked List.\n                                                        Open Addressing - finding another place with the hash table by offsetting\n                                                        initial location.`\n        }, {\n          heading: 'Time Complexity',\n          tableListHead: {\n            rightHead: \"Average\",\n            right2Head: \"Worst\"\n          },\n          tableList: [{\n            left: \"Insertion\",\n            right: \"O(1)\",\n            right2: \"O(n)\"\n          }, {\n            left: \"Removal\",\n            right: \"O(1)\",\n            right2: \"O(n)\"\n          }, {\n            left: \"Search\",\n            right: \"O(1)\",\n            right2: \"O(n)\"\n          }]\n        }, {\n          heading: 'Practice',\n          tagList: [`Two Sum`]\n        }, {\n          heading: 'Implementation',\n          tagListLinks: [{\n            link: \"https://github.com/JLSeto/DataStructures/tree/main/tS_jS/src/hashtable\",\n            title: \"TypeScript\"\n          }, {\n            link: \"\",\n            title: \"C++\"\n          }]\n        }],\n        hardware: [],\n        software: [],\n        references: []\n      }, {\n        type: [\"Data Structures\"],\n        image: \"\",\n        title: \"Priority Queue | Min/Max Heap\",\n        date: new Date(\"August 12, 2021\"),\n        subtitle: \"TypeScript, C++\",\n        description: \"Notes on the Priority Queue abstract data type and the Heap data structure\",\n        link: \"priorityqueue\",\n        details: [{\n          heading: 'What is a Priority Queue (PQ)?',\n          notes: `An abstract data type that operates similar to a normal queue\n                                                        except that each element has a certain priority.  The priority of the elements in the PQ\n                                                        determine the order in which elements are removed from the PQ.  Data must be comparable \n                                                        (must be able to be ordered from least to greates or vice versa).`\n        }, {\n          heading: 'What is a Heap?',\n          notes: `A tree based Data Structure that satisfies the heap invariant: If A is a parent node\n                                                        of B, then A is ordered with respect to B for all nodes A & B in the Heap. \n                                                        Example: Min Heap / Max Heap`\n        }, {\n          heading: 'When / Where?',\n          list: [\"Certain Implementations of Dijkstra's Shortest Path\", \"Dynamically fetch next best or worst element\", \"Huffman Coding (loessless data compression)\", \"BFS algorithms\", \"Minimum Spanning Tree Algorithms\"]\n        }, {\n          heading: 'Complexity',\n          tableList: [{\n            left: \"Construction\",\n            right: \"O(n)\"\n          }, {\n            left: \"Polling\",\n            right: \"O(log n)\"\n          }, {\n            left: \"Peeking\",\n            right: \"O(1)\"\n          }, {\n            left: \"Adding\",\n            right: \"O(log n)\"\n          }, {\n            left: \"Naive Removing\",\n            right: \"O(n)\"\n          }, {\n            left: \"Advance Remove\",\n            right: \"O(log n)\"\n          }, {\n            left: \"Naive Contains\",\n            right: \"O(n)\"\n          }, {\n            left: \"Contains Check\",\n            right: \"O(1)\"\n          }]\n        }, {\n          heading: 'Binary Heap Representation',\n          notes: `Adding - Bottom up (Swim) <br>\n                                                         Removing - Bubble Down (Sink) <br><br>\n                                                         left: 2*i + 1; <br>\n                                                         right: 2*i + 2; <br><br>\n                                                         Removing Elements - <br>\n                                                         1. Swap root with last element. <br> \n                                                         2. Remove the root after swapped. <br>\n                                                         3. Bubble Down <br><br>\n                                                         [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]<br>\n                                                         [9, 8, 7, 6, 5, 1, 2, 2, 2, 3, &nbsp;&nbsp;4, &nbsp;&nbsp;0, &nbsp;&nbsp;1, &nbsp;&nbsp;&nbsp;2, &nbsp;&nbsp;1]`,\n          img: '/assets/blog/binaryHeap/binaryHeap.png'\n        }, {\n          heading: 'Practice',\n          tagList: ['Merge k Sorted Lists', 'Find Median from Data Stream', 'Top K Frequent Elements']\n        }, {\n          heading: 'Implementation',\n          tagListLinks: [{\n            link: \"https://github.com/JLSeto/DataStructures/tree/main/tS_jS/src/priorityqueue\",\n            title: \"TypeScript\"\n          }, {\n            link: \"\",\n            title: \"C++\"\n          }]\n        }],\n        hardware: [],\n        software: [],\n        references: []\n      }, {\n        type: [\"Data Structures\"],\n        image: \"\",\n        title: \"Binary Search Tree\",\n        date: new Date(\"August 12, 2021\"),\n        subtitle: \"TypeScript, C++\",\n        description: \"Notes on the Binary Search Tree Data Structure\",\n        link: \"binarysearchtree\",\n        details: [{\n          heading: 'What is a tree?',\n          notes: `A tree is an undirected graph which satisfies any 3: <br>\n                                            <ul>\n                                                <li>\n                                                    An acyclic connected graph\n                                                </li>\n                                                <li>\n                                                    A connected graph with N nodes and N - 1 edges\n                                                </li>\n                                                <li>\n                                                    An graph in which any two vertices are connected by exactly one path\n                                                </li>\n                                            </ul>\n                                            Child - a node extending from another node <br>\n                                            Leaf Node - no children <br>\n                                            Subtree - a tree contained entirely within another`\n        }, {\n          heading: 'What is a Binary Tree?',\n          notes: `A tree that has at most two children pre node`\n        }, {\n          heading: 'What is a Binary Search Tree?',\n          notes: `A binary tree that satisfies the BST invariant:<br>\n                                                        - Left subtree has smaller elements <br>\n                                                        - Right subtree has larger elements`\n        }, {\n          heading: 'When/where Binary Search Tree?',\n          list: ['Implementation of some Maps & Abstract Data Structures', 'Red & Black Trees', 'AVL Trees (Adelson-Velskii and Landis)', 'Splay Trees', 'Binary Heaps', 'Syntax trees (used by compiler & calculators', 'Treap - probabilistic Data Structure']\n        }, {\n          heading: 'Time Complexity',\n          tableListHead: {\n            rightHead: \"Average\",\n            right2Head: \"Worst\"\n          },\n          tableList: [{\n            left: \"Insert\",\n            right: \"O(log(n))\",\n            right2: \"O(n)\"\n          }, {\n            left: \"Delete\",\n            right: \"O(log(n))\",\n            right2: \"O(n)\"\n          }, {\n            left: \"Remove\",\n            right: \"O(log(n))\",\n            right2: \"O(n)\"\n          }, {\n            left: \"Search\",\n            right: \"O(log(n))\",\n            right2: \"O(n)\"\n          }]\n        }, {\n          heading: 'Insertion',\n          list: ['Recurse down left or right subtree', 'Handle Finding a duplicate value', 'create a new node (null leaf)']\n        }, {\n          heading: 'Removing',\n          list: ['Find element we want to remove', 'Replace the node we want to remove with its successor to maintain BST invariant']\n        }, {\n          heading: 'Traversal',\n          list: ['PreOrder  - prints before recursive calls', 'InOrder   - prints between recursive calls', 'PostOrder - prints after recursive calls']\n        }, {\n          heading: 'Practice',\n          tagList: [`Validate Binary Search Tree`, 'Convert Sorted Array to Binary Search Tree', 'Binary Search Tree Iterator']\n        }, {\n          heading: 'Implementation',\n          tagListLinks: [{\n            link: \"https://github.com/JLSeto/DataStructures/tree/main/tS_jS/src/binarysearchtree\",\n            title: \"TypeScript\"\n          }, {\n            link: \"\",\n            title: \"C++\"\n          }]\n        }],\n        hardware: [],\n        software: [],\n        references: []\n      }];\n    }\n\n  }\n\n  BlogComponent.ɵfac = function BlogComponent_Factory(t) {\n    return new (t || BlogComponent)(i0.ɵɵdirectiveInject(i1.HelperService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver), i0.ɵɵdirectiveInject(i3.DomSanitizer));\n  };\n\n  BlogComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BlogComponent,\n    selectors: [[\"app-blog\"]],\n    decls: 11,\n    vars: 6,\n    consts: [[\"fxLayout.gt-sm\", \"row\", \"fxLayoutAlign.gt-sm\", \"start start\", \"fxLayout.lt-md\", \"column\", \"fxLayoutAlign.lt-md\", \"start start\", 1, \"ftop-container-blog\", 3, \"ngClass\"], [\"fxShow\", \"true\", \"fxHide.lt-lg\", \"\", \"fxFlex\", \"4\"], [\"fxFlex\", \"\", \"fxLayout\", \"row\", \"fxLayoutAlign\", \"start start\", \"fxLayout.lt-md\", \"column\", \"fxLayoutAlign.lt-md\", \"start stretch\", \"fxLayoutGap\", \"30px\", 2, \"padding-left\", \"10px\", \"padding-right\", \"10px\"], [\"fxFlex\", \"\", 4, \"ngIf\"], [\"fxFlex\", \"\"], [4, \"ngFor\", \"ngForOf\"], [2, \"text-align\", \"center\", \"margin-bottom\", \"8px\"], [\"style\", \"margin-bottom: 4px\", 4, \"ngIf\"], [\"style\", \"text-align: right;\", 4, \"ngIf\"], [\"fxLayout\", \"row wrap\", \"fxLayoutAlign\", \"start stretch\", \"fxLayoutGap\", \"4px\"], [\"style\", \"margin-bottom: 8px;\", 4, \"ngFor\", \"ngForOf\"], [\"mat-stroked-button\", \"\", 1, \"projects-button-pink\", 3, \"click\"], [2, \"margin-bottom\", \"8px\"], [\"class\", \"mat-elevation-z0 projects-card\", \"style\", \"border: 0.5px solid #d5d5d5;\", 3, \"click\", 4, \"ngIf\"], [1, \"mat-elevation-z0\", \"projects-card\", 2, \"border\", \"0.5px solid #d5d5d5\", 3, \"click\"], [\"fxLayout\", \"row\", \"fxLayoutAlign\", \"start stretch\", \"fxLayoutGap\", \"5px\", \"fxLayout.lt-sm\", \"column\", \"fxLayoutAlign.lt-sm\", \"stretch center\"], [2, \"display\", \"block\", \"max-width\", \"250px\", \"min-width\", \"0px\"], [1, \"projects-img\", 3, \"src\"], [\"fxFlex\", \"\", \"fxLayout\", \"column\", \"fxLayoutAlign\", \"start start\", 2, \"padding-left\", \"4px\"], [1, \"projects-title\"], [1, \"projects-subtitle\"], [1, \"projects-description\"], [4, \"ngIf\"], [2, \"text-align\", \"center\"], [2, \"margin-bottom\", \"12px\", \"line-height\", \"1.6\", 3, \"innerHTML\"], [2, \"display\", \"block\", \"max-width\", \"800px\", \"min-width\", \"50px\"], [\"class\", \"projects-img\", 4, \"ngIf\"], [\"style\", \"margin-bottom: 12px; line-height: 1.6;\", 3, \"innerHTML\", 4, \"ngIf\"], [\"style\", \"margin-bottom: 12px; line-height: 1.6;\", 4, \"ngIf\"], [\"fxLayout\", \"row\", \"style\", \"margin-bottom: 12px\", 4, \"ngIf\"], [2, \"margin-bottom\", \"12px\", \"line-height\", \"1.6\"], [\"fxLayout\", \"row wrap\", \"fxLayoutGap\", \"4px\", 2, \"margin-bottom\", \"12px\"], [\"mat-stroked-button\", \"\", \"style\", \"border-radius: 50px; background-color: white; margin-bottom: 8px;\", 4, \"ngIf\"], [\"mat-stroked-button\", \"\", 2, \"border-radius\", \"50px\", \"background-color\", \"white\", \"margin-bottom\", \"8px\"], [\"target\", \"_blank\", 2, \"color\", \"#1e88e5\", \"text-decoration\", \"none\", 3, \"href\"], [\"mat-stroked-button\", \"\", 1, \"projects-button-no-link\"], [\"fxLayout\", \"row\", 2, \"margin-bottom\", \"12px\"], [1, \"projects-img\"], [2, \"margin-bottom\", \"4px\"], [3, \"iframeSrc\"], [2, \"text-align\", \"right\"]],\n    template: function BlogComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵtemplate(3, BlogComponent_div_3_Template, 4, 2, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵtemplate(5, BlogComponent_div_5_Template, 2, 1, \"div\", 5);\n        i0.ɵɵelementStart(6, \"div\", 6);\n        i0.ɵɵtemplate(7, BlogComponent_div_7_Template, 2, 1, \"div\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(8, BlogComponent_div_8_Template, 4, 1, \"div\", 8);\n        i0.ɵɵtemplate(9, BlogComponent_div_9_Template, 2, 1, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"div\", 1);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngClass\", ctx.hS.getInnerWidth() > 959 ? \"toptop-blog\" : \"toptopPadd\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", !ctx.hS.getIsMobile() && ctx.hS.getInnerWidth() > 959 || !ctx.currentURL || ctx.hS.getIsMobile() && !ctx.currentURL);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.arrProjects);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.iframeSrc);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.gitSrc);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.arrProjects);\n      }\n    },\n    directives: [i4.DefaultLayoutDirective, i4.DefaultLayoutAlignDirective, i5.NgClass, i6.DefaultClassDirective, i6.DefaultShowHideDirective, i4.DefaultFlexDirective, i4.DefaultLayoutGapDirective, i5.NgIf, i5.NgForOf, i7.MatButton, i8.MatCard, i9.FroggerComponent, i10.iFrameView],\n    pipes: [i11.DisplayDatePipe],\n    styles: [\".ftop-container-blog[_ngcontent-%COMP%]{font-size:120%;font-family:system-ui,-apple-system,BlinkMacSystemFont,\\\"Segoe UI\\\",Roboto,Ubuntu,\\\"Helvetica Neue\\\",sans-serif;color:#333;letter-spacing:1px}.toptop-blog[_ngcontent-%COMP%]{background:linear-gradient(to right,#ffffff 50%,#ffffff 0%);min-height:calc(100vh - 40px);margin-bottom:10px;padding-top:25px}.toptopPadd[_ngcontent-%COMP%]{padding-top:25px}h1[_ngcontent-%COMP%]{font-family:\\\"Varela Round\\\";font-size:24px;font-style:normal;font-feature-settings:normal;font-variant:normal;font-weight:550;line-height:69.4px}h2[_ngcontent-%COMP%]{font-family:\\\"Varela Round\\\";font-size:20px;font-style:normal;font-feature-settings:normal;font-variant:normal;font-weight:500;line-height:36.4px}[_nghost-%COMP%]     .h3-deep{font-family:\\\"Varela Round\\\";font-size:16px;font-style:normal;font-feature-settings:normal;font-variant:normal;font-weight:600;margin-top:12px;margin-bottom:4px}.projects-card[_ngcontent-%COMP%]{cursor:pointer}.projects-card[_ngcontent-%COMP%]:hover{background-color:#e8f0ff}.projects-title[_ngcontent-%COMP%]{font-family:\\\"Varela Round\\\";font-size:16.5px;font-style:normal;font-feature-settings:normal;font-variant:normal;font-weight:500;line-height:28.4px}.projects-subtitle[_ngcontent-%COMP%]{font-family:\\\"Varela Round\\\";font-size:14px;font-style:italic;font-feature-settings:normal;font-variant:normal;font-weight:400;color:#646464}.projects-description[_ngcontent-%COMP%]{font-family:\\\"Varela Round\\\";font-size:14px;font-style:normal;font-feature-settings:normal;font-variant:normal;font-weight:400}.projects-img[_ngcontent-%COMP%]{border-radius:5px;height:auto;width:100%;overflow:hidden;display:flex;justify-content:center;align-items:center;padding-left:0;display:block}.videoWrapper[_ngcontent-%COMP%]{position:relative;padding-bottom:56.25%;padding-top:25px;height:0;width:100%;height:100%;border:.5px solid #d5d5d5}.videoWrapper[_ngcontent-%COMP%]   iframe[_ngcontent-%COMP%]{position:absolute;top:0;left:0;width:100%;height:100%}.projects-button-no-link[_ngcontent-%COMP%]{border-radius:50px;color:#505050;background-color:#fff;cursor:default;pointer-events:none;margin-bottom:8px;text-overflow:ellipsis}.projects-button-pink[_ngcontent-%COMP%]{border-radius:50px;color:#ff4048;background-color:#fff;margin-bottom:8px;text-overflow:ellipsis}table[_ngcontent-%COMP%]{font-family:arial,sans-serif;border-collapse:collapse;width:100%}td[_ngcontent-%COMP%], th[_ngcontent-%COMP%]{border:1px solid #dddddd;text-align:left;padding:8px}\"]\n  });\n  return BlogComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}